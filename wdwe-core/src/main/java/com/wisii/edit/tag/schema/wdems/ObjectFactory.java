/*
 * Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "License"); you may not use this file except in compliance with
 * the License.  You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *///
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, vJAXB 2.1.10 in JDK 6 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2013.01.30 at 02:11:32 下午 CST 
//


package com.wisii.edit.tag.schema.wdems;

import javax.xml.bind.annotation.XmlRegistry;


/**
 * This object contains factory methods for each 
 * Java content interface and Java element interface 
 * generated in the com.wisii.edit.tag.schema.wdems package. 
 * <p>An ObjectFactory allows you to programatically 
 * construct new instances of the Java representation 
 * for XML content. The Java representation of XML 
 * content can consist of schema derived interfaces 
 * and classes representing the binding of schema 
 * type definitions, element declarations and model 
 * groups.  Factory methods for each of these are 
 * provided in this class.
 * 
 */
@XmlRegistry
public class ObjectFactory {


    /**
     * Create a new ObjectFactory that can be used to create new instances of schema derived classes for package: com.wisii.edit.tag.schema.wdems
     * 
     */
    public ObjectFactory() {
    }

    /**
     * Create an instance of {@link Input }
     * 
     */
    public Input createInput() {
        return new Input();
    }

    /**
     * Create an instance of {@link TableInfo.Column }
     * 
     */
    public TableInfo.Column createTableInfoColumn() {
        return new TableInfo.Column();
    }

    /**
     * Create an instance of {@link Connwith }
     * 
     */
    public Connwith createConnwith() {
        return new Connwith();
    }

    /**
     * Create an instance of {@link Include }
     * 
     */
    public Include createInclude() {
        return new Include();
    }

    /**
     * Create an instance of {@link TableInfo }
     * 
     */
    public TableInfo createTableInfo() {
        return new TableInfo();
    }

    /**
     * Create an instance of {@link Validation.Para }
     * 
     */
    public Validation.Para createValidationPara() {
        return new Validation.Para();
    }

    /**
     * Create an instance of {@link A }
     * 
     */
    public A createA() {
        return new A();
    }

    /**
     * Create an instance of {@link Form }
     * 
     */
    public Form createForm() {
        return new Form();
    }

    /**
     * Create an instance of {@link Connwith.Option }
     * 
     */
    public Connwith.Option createConnwithOption() {
        return new Connwith.Option();
    }

    /**
     * Create an instance of {@link DataSource }
     * 
     */
    public DataSource createDataSource() {
        return new DataSource();
    }

    /**
     * Create an instance of {@link Swingdatasource }
     * 
     */
    public Swingdatasource createSwingdatasource() {
        return new Swingdatasource();
    }

    /**
     * Create an instance of {@link Table.Tr.Td }
     * 
     */
    public Table.Tr.Td createTableTrTd() {
        return new Table.Tr.Td();
    }

    /**
     * Create an instance of {@link Connwith.Formula }
     * 
     */
    public Connwith.Formula createConnwithFormula() {
        return new Connwith.Formula();
    }

    /**
     * Create an instance of {@link Date }
     * 
     */
    public Date createDate() {
        return new Date();
    }

    /**
     * Create an instance of {@link Data }
     * 
     */
    public Data createData() {
        return new Data();
    }

    /**
     * Create an instance of {@link Select }
     * 
     */
    public Select createSelect() {
        return new Select();
    }

    /**
     * Create an instance of {@link Connwith.Formula.Function }
     * 
     */
    public Connwith.Formula.Function createConnwithFormulaFunction() {
        return new Connwith.Formula.Function();
    }

    /**
     * Create an instance of {@link Table.Tr }
     * 
     */
    public Table.Tr createTableTr() {
        return new Table.Tr();
    }

    /**
     * Create an instance of {@link Connwith.Var }
     * 
     */
    public Connwith.Var createConnwithVar() {
        return new Connwith.Var();
    }

    /**
     * Create an instance of {@link Table }
     * 
     */
    public Table createTable() {
        return new Table();
    }

    /**
     * Create an instance of {@link Group }
     * 
     */
    public Group createGroup() {
        return new Group();
    }

    /**
     * Create an instance of {@link Checkbox }
     * 
     */
    public Checkbox createCheckbox() {
        return new Checkbox();
    }

    /**
     * Create an instance of {@link Button }
     * 
     */
    public Button createButton() {
        return new Button();
    }

    /**
     * Create an instance of {@link Wdems }
     * 
     */
    public Wdems createWdems() {
        return new Wdems();
    }

    /**
     * Create an instance of {@link Validation }
     * 
     */
    public Validation createValidation() {
        return new Validation();
    }

    /**
     * Create an instance of {@link Wdems.Xpath }
     * 
     */
    public Wdems.Xpath createWdemsXpath() {
        return new Wdems.Xpath();
    }

    /**
     * Create an instance of {@link Connwith.Formula.Para }
     * 
     */
    public Connwith.Formula.Para createConnwithFormulaPara() {
        return new Connwith.Formula.Para();
    }

}
